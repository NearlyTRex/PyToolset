#!/usr/bin/python
#############################################################################################################
## MultiArchiver, Waterstone Productions
## Easy to use archive management tool for managing multiple archives at once
##
## Requires: zip
#############################################################################################################
import os, sys
#############################################################################################################


#############################################################################################################
zip_base = "zip "
zip_recursive = " -r "
zip_extension = ".zip "
#############################################################################################################


#############################################################################################################
def AllByName(indir):
	os.chdir(indir)
	for dir in os.listdir(os.getcwd()):
		if os.path.isfile(dir):
			continue
		command = zip_base + zip_recursive + dir + zip_extension + dir
		print command
		os.system(command)
#############################################################################################################
def Help():
	print "multiarchiver <command> <directory>"
	print "  commands:"
	print "    allbyname = Archives all the folders in a directory by their name"
	sys.exit(0)
#############################################################################################################
def Error(message):
	print "ERROR: " + message
	sys.exit(0)
#############################################################################################################


#############################################################################################################
command = ""
directory = ""
#############################################################################################################
if len(sys.argv) != 3:
	Help()
else:
	command = sys.argv[1]
	directory = sys.argv[2]
#############################################################################################################
if not os.path.exists(directory):
	Error("Directory must exist already")
#############################################################################################################
if command == "allbyname":
	AllByName(directory)
else:
	Help()
#############################################################################################################

